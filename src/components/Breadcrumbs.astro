---
interface Props {
  items: string[]
  last: string
}

const { items, last } = Astro.props
---

<section class="breadcrumb">
  <img src="/img/bg.png" alt="" class="breadcrumb__bg" />
  <div class="breadcrumb__wrapper">
    <span>
      {
        items.map(item => (
          <span>
            <a href="#" class="breadcrumb__title">
              {item}
            </a>
          </span>
        ))
      }
      <span class="breadcrumb_last">{last}</span>
    </span>
  </div>
</section>

<style is:global lang="scss">
  .breadcrumb {
    position: relative;
    padding-top: 200px;
    padding-bottom: fluid(20px, 30px);
    margin-bottom: fluid(30px, 60px);
    background-color: #1f0f06cc;
    @include section;
    &__wrapper {
      grid-area: center;
      & span {
        display: flex;
      }
    }
    &__bg {
      position: absolute;
      width: 100%;
      height: 100%;
      opacity: 0.3;
      object-fit: cover;
      filter: grayscale(100%);
      z-index: -1;
    }
    & > span > span:not(:first-child) {
      margin-left: 20px;
    }

    a,
    &_last {
      display: flex;
      align-items: baseline;
      font-weight: 400;
      font-size: 14px;
      line-height: 18px;
      transition: color 0.38s ease-in-out;
      position: relative;
      &::before {
        content: url('data:image/svg+xml,<svg width="5" height="8" viewBox="0 0 5 8" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.1912 7.82391C0.0687747 7.71112 0 7.55817 0 7.39869C0 7.23921 0.0687747 7.08626 0.1912 6.97348L3.42372 3.99637L0.1912 1.01926C0.0722446 0.905828 0.00642252 0.753904 0.00791025 0.59621C0.00939798 0.438515 0.0780768 0.287667 0.199154 0.176156C0.320232 0.0646448 0.484022 0.00139332 0.655245 2.28882e-05C0.826468 -0.00134754 0.991426 0.0592737 1.11459 0.16883L4.8088 3.57115C4.93123 3.68394 5 3.83689 5 3.99637C5 4.15585 4.93123 4.3088 4.8088 4.42158L1.11459 7.82391C0.992127 7.93666 0.826056 8 0.652894 8C0.479733 8 0.313662 7.93666 0.1912 7.82391Z" fill="%238A8A8A"/></svg>');
        padding-right: 16px;
        padding-left: 16px;
      }
    }

    &_last {
      font-weight: 600;
      color: #ffffff;
    }
    span:first-child > a::before {
      display: none;
    }

    a {
    }

    a:hover {
    }
    &__title {
      color: #8a8a8a;
    }
  }
  @include laptop {
    .breadcrumb {
      padding-top: 95px;
    }
  }
  @include tablet {
    .breadcrumb {
      &__wrapper {
        & span {
          &:first-child {
            flex-wrap: wrap;
            row-gap: 5px;
            a {
              padding-left: 0;
              padding-right: 16px;
            }
          }
        }
      }
      a,
      &_last {
        padding-left: 0px;
        &::before {
          padding-left: 0;
        }
      }
      &_last {
        max-width: 30ch;
        display: inline-block !important;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }
</style>
